{
    "name": "02-Parent",
    "properties": {
        "description": "ADF.procfwk parent pipeline used to bootstrap the orchestration framework in perform the first level ForEach calls in sequence for the metadata stages.",
        "activities": [
            {
                "name": "Get Stages",
                "description": "Returns a distinct list of execution stages within the framework metadata.",
                "type": "Lookup",
                "dependsOn": [
                    {
                        "activity": "Set Execution Id",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 0,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "AzureSqlSource",
                        "sqlReaderStoredProcedureName": "[procfwk].[GetStages]",
                        "storedProcedureParameters": {
                            "ExecutionId": {
                                "type": "Guid",
                                "value": {
                                    "value": "@variables('ExecutionId')",
                                    "type": "Expression"
                                }
                            },
                            "BatchId": {
                                "type": "Int32",
                                "value": {
                                    "value": "@variables('BatchId')",
                                    "type": "Expression"
                                }
                            }
                        },
                        "queryTimeout": "02:00:00",
                        "partitionOption": "None"
                    },
                    "dataset": {
                        "referenceName": "GetSetMetadata",
                        "type": "DatasetReference"
                    },
                    "firstRowOnly": false
                }
            },
            {
                "name": "Execute Stages",
                "description": "Top level ForEach to sequentially call all processing stages within the framework metadata. Items for iteration passed from the Get Stages lookup activity.",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Get Stages",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('Get Stages').output.value",
                        "type": "Expression"
                    },
                    "isSequential": true,
                    "activities": [
                        {
                            "name": "Stage Executor",
                            "description": "Call to the framework generic child pipeline for a given execution stage.",
                            "type": "ExecutePipeline",
                            "dependsOn": [
                                {
                                    "activity": "Log Stage Preparing",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "pipeline": {
                                    "referenceName": "03-Child",
                                    "type": "PipelineReference"
                                },
                                "waitOnCompletion": true,
                                "parameters": {
                                    "StageId": {
                                        "value": "@item().StageId",
                                        "type": "Expression"
                                    },
                                    "ExecutionId": {
                                        "value": "@variables('ExecutionId')",
                                        "type": "Expression"
                                    },
                                    "BatchId": {
                                        "value": "@variables('BatchId')",
                                        "type": "Expression"
                                    },
                                    "BatchName": {
                                        "value": "@pipeline().parameters.BatchName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        {
                            "name": "Log Stage Preparing",
                            "description": "Update the current execution table flagging all pipelines within the stage as preparing.",
                            "type": "SqlServerStoredProcedure",
                            "dependsOn": [
                                {
                                    "activity": "Check and Update Blockers",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
								"timeout": "0.00:10:00",
								"retry": 0,
								"retryIntervalInSeconds": 0,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "storedProcedureName": "[procfwk].[SetLogStagePreparing]",
                                "storedProcedureParameters": {
                                    "ExecutionId": {
                                        "value": {
                                            "value": "@variables('ExecutionId')",
                                            "type": "Expression"
                                        },
                                        "type": "Guid"
                                    },
                                    "BatchId": {
                                        "value": {
                                            "value": "@variables('BatchId')",
                                            "type": "Expression"
                                        },
                                        "type": "Int32"
                                    },
                                    "StageId": {
                                        "value": {
                                            "value": "@item().StageId",
                                            "type": "Expression"
                                        },
                                        "type": "Int32"
                                    }
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "SupportDatabase",
                                "type": "LinkedServiceReference"
                            }
                        },
                        {
                            "name": "Check and Update Blockers",
                            "description": "Used to double check and stop the next execution stage if failures and blockers have be incurred. This also depends on the failure handling property value which defines the stored procedure behaviour.",
                            "type": "SqlServerStoredProcedure",
                            "dependsOn": [],
                            "policy": {
								"timeout": "0.00:10:00",
								"retry": 0,
								"retryIntervalInSeconds": 0,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "storedProcedureName": "[procfwk].[CheckForBlockedPipelines]",
                                "storedProcedureParameters": {
                                    "ExecutionId": {
                                        "value": {
                                            "value": "@variables('ExecutionId')",
                                            "type": "Expression"
                                        },
                                        "type": "Guid"
                                    },
                                    "BatchId": {
                                        "value": {
                                            "value": "@variables('BatchId')",
                                            "type": "Expression"
                                        },
                                        "type": "Int32"
                                    },
                                    "StageId": {
                                        "value": {
                                            "value": "@item().StageId",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "SupportDatabase",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ]
                }
            },
            {
                "name": "Execution Wrapper",
                "description": "Wrapper to reset and restart processing or create a completely new execution instance of the framework metadata.",
                "type": "Lookup",
                "dependsOn": [
                    {
                        "activity": "Clean Up Previous Run",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 0,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "AzureSqlSource",
                        "sqlReaderStoredProcedureName": "[procfwk].[ExecutionWrapper]",
                        "storedProcedureParameters": {
                            "CallingDataFactory": {
                                "type": "String",
                                "value": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                }
                            },
                            "AdfParentPipelineRunId": {
                                "type": "String",
                                "value": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                }
                            },
                            "BatchName": {
                                "type": "String",
                                "value": {
                                    "value": "@pipeline().parameters.BatchName",
                                    "type": "Expression"
                                }
                            }
                        },
                        "queryTimeout": "02:00:00",
                        "partitionOption": "None"
                    },
                    "dataset": {
                        "referenceName": "GetSetMetadata",
                        "type": "DatasetReference"
                    }
                }
            },
            {
                "name": "Check Outcome and Update Logs",
                "description": "After a successful execution run the current execution metadata is moved to the long term logging table by this stored procedure call. Otherwise an error will be raised.",
                "type": "SqlServerStoredProcedure",
                "dependsOn": [
                    {
                        "activity": "Execute Stages",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 0,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "storedProcedureName": "[procfwk].[UpdateExecutionLog]",
                    "storedProcedureParameters": {
                        "PerformErrorCheck": {
                            "value": {
                                "value": "@bool(1)",
                                "type": "Expression"
                            },
                            "type": "Boolean"
                        },
                        "BatchId": {
                            "value": {
                                "value": "@variables('BatchId')",
                                "type": "Expression"
                            },
                            "type": "Int32"
                        }
                    }
                },
                "linkedServiceName": {
                    "referenceName": "SupportDatabase",
                    "type": "LinkedServiceReference"
                }
            },
            {
                "name": "Metadata Integrity Checks",
                "description": "Performs a series of checks on all metadata held in the framework SQLDB. This is intended to raise errors before an execution run even starts.",
                "type": "Lookup",
                "dependsOn": [
                    {
                        "activity": "Execute Precursor",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 0,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "AzureSqlSource",
                        "sqlReaderStoredProcedureName": "[procfwk].[CheckMetadataIntegrity]",
                        "storedProcedureParameters": {
                            "DebugMode": {
                                "type": "Boolean",
                                "value": "false"
                            },
                            "BatchId": {
                                "type": "Int32",
                                "value": {
                                    "value": "@variables('BatchId')",
                                    "type": "Expression"
                                }
                            }
                        },
                        "queryTimeout": "02:00:00",
                        "partitionOption": "None"
                    },
                    "dataset": {
                        "referenceName": "GetSetMetadata",
                        "type": "DatasetReference"
                    },
                    "firstRowOnly": false
                }
            },
            {
                "name": "Clean Up Previous Run",
                "description": "Handle Worker pipelines that are reported as Running when the parent pipeline is called again. Get what the actual status of those pipelines is.",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Metadata Integrity Checks",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('Metadata Integrity Checks').output.value",
                        "type": "Expression"
                    },
                    "isSequential": false,
                    "batchCount": 50,
                    "activities": [
                        {
                            "name": "Get SPN Details",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
								"timeout": "0.00:10:00",
								"retry": 0,
								"retryIntervalInSeconds": 0,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "AzureSqlSource",
                                    "sqlReaderStoredProcedureName": "[procfwk].[GetWorkerAuthDetails]",
                                    "storedProcedureParameters": {
                                        "ExecutionId": {
                                            "type": "Guid",
                                            "value": {
                                                "value": "@item().LocalExecutionId",
                                                "type": "Expression"
                                            }
                                        },
                                        "PipelineId": {
                                            "type": "Int32",
                                            "value": {
                                                "value": "@item().PipelineId",
                                                "type": "Expression"
                                            }
                                        },
                                        "StageId": {
                                            "type": "Int32",
                                            "value": {
                                                "value": "@item().StageId",
                                                "type": "Expression"
                                            }
                                        },
                                        "BatchId": {
                                            "type": "Int32",
                                            "value": {
                                                "value": "@variables('BatchId')",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "GetSetMetadata",
                                    "type": "DatasetReference"
                                }
                            }
                        },
                        {
                            "name": "Log Pipeline Checking",
                            "type": "SqlServerStoredProcedure",
                            "dependsOn": [],
                            "policy": {
								"timeout": "0.00:10:00",
								"retry": 0,
								"retryIntervalInSeconds": 0,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "storedProcedureName": "[procfwk].[SetLogPipelineChecking]",
                                "storedProcedureParameters": {
                                    "ExecutionId": {
                                        "value": {
                                            "value": "@item().LocalExecutionId",
                                            "type": "Expression"
                                        },
                                        "type": "Guid"
                                    },
                                    "PipelineId": {
                                        "value": {
                                            "value": "@item().PipelineId",
                                            "type": "Expression"
                                        },
                                        "type": "Int32"
                                    },
                                    "StageId": {
                                        "value": {
                                            "value": "@item().StageId",
                                            "type": "Expression"
                                        },
                                        "type": "Int32"
                                    },
                                    "BatchId": {
                                        "value": {
                                            "value": "@variables('BatchId')",
                                            "type": "Expression"
                                        },
                                        "type": "Int32"
                                    }
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "SupportDatabase",
                                "type": "LinkedServiceReference"
                            }
                        },
                        {
                            "name": "Get Pipeline Status",
                            "type": "AzureFunctionActivity",
                            "dependsOn": [
                                {
                                    "activity": "Get SPN Details",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                },
                                {
                                    "activity": "Log Pipeline Checking",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.00:10:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 0,
                                "secureOutput": false,
                                "secureInput": true
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "functionName": "CheckPipelineStatus",
                                "method": "POST",
                                "body": {
                                    "value": "@concat('\n{\n    \"tenantId\": \"',activity('Get SPN Details').output.firstRow.TenantId,'\",\n    \"applicationId\": \"',activity('Get SPN Details').output.firstRow.AppId,'\",\n    \"authenticationKey\": \"',activity('Get SPN Details').output.firstRow.AppSecret,'\",\n    \"subscriptionId\": \"',activity('Get SPN Details').output.firstRow.SubscriptionId,'\",\n    \"resourceGroup\": \"',item().ResourceGroupName,'\",\n    \"factoryName\": \"',item().DataFactoryName,'\",\n    \"pipelineName\": \"',item().PipelineName,'\",\n    \"runId\": \"',item().AdfPipelineRunId,'\"\n}')",
                                    "type": "Expression"
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "FrameworkFunctions",
                                "type": "LinkedServiceReference"
                            }
                        },
                        {
                            "name": "Set Pipeline Status",
                            "description": "Update the metadata depending on the actual pipeline outcome. Using the status as the case.",
                            "type": "Switch",
                            "dependsOn": [
                                {
                                    "activity": "Get Pipeline Status",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "on": {
                                    "value": "@activity('Get Pipeline Status').output.Status",
                                    "type": "Expression"
                                },
                                "cases": [
                                    {
                                        "value": "Failed",
                                        "activities": [
                                            {
                                                "name": "Pipeline Status Failed",
                                                "description": "Updates the current execution table with a pipeline status of failed if the function outcome is failed. Also blocks pipelines in the downstream execution stage.",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
													"timeout": "0.00:10:00",
													"retry": 0,
													"retryIntervalInSeconds": 0,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[procfwk].[SetLogPipelineFailed]",
                                                    "storedProcedureParameters": {
                                                        "ExecutionId": {
                                                            "value": {
                                                                "value": "@item().LocalExecutionId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Guid"
                                                        },
                                                        "BatchId": {
                                                            "value": {
                                                                "value": "@item().BatchId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "PipelineId": {
                                                            "value": {
                                                                "value": "@item().PipelineId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "RunId": {
                                                            "value": null,
                                                            "type": "Guid"
                                                        },
                                                        "StageId": {
                                                            "value": {
                                                                "value": "@item().StageId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "SupportDatabase",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "value": "Succeeded",
                                        "activities": [
                                            {
                                                "name": "Pipeline Status Succeeded",
                                                "description": "Updates the current execution table with a pipeline status of success if the function outcome is succeeded.",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
													"timeout": "0.00:10:00",
													"retry": 0,
													"retryIntervalInSeconds": 0,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[procfwk].[SetLogPipelineSuccess]",
                                                    "storedProcedureParameters": {
                                                        "ExecutionId": {
                                                            "value": {
                                                                "value": "@item().LocalExecutionId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Guid"
                                                        },
                                                        "BatchId": {
                                                            "value": {
                                                                "value": "@item().BatchId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "StageId": {
                                                            "value": {
                                                                "value": "@item().StageId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "PipelineId": {
                                                            "value": {
                                                                "value": "@item().PipelineId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "SupportDatabase",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "value": "Queued",
                                        "activities": [
                                            {
                                                "name": "Pipeline Status Queued - Running",
                                                "description": "Updates the current execution table with a pipeline status of running if the function outcome is queued.",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
													"timeout": "0.00:10:00",
													"retry": 0,
													"retryIntervalInSeconds": 0,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[procfwk].[SetLogPipelineRunning]",
                                                    "storedProcedureParameters": {
                                                        "ExecutionId": {
                                                            "value": {
                                                                "value": "@item().LocalExecutionId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Guid"
                                                        },
                                                        "BatchId": {
                                                            "value": {
                                                                "value": "@item().BatchId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "StageId": {
                                                            "value": {
                                                                "value": "@item().StageId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "PipelineId": {
                                                            "value": {
                                                                "value": "@item().PipelineId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "SupportDatabase",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "value": "InProgress",
                                        "activities": [
                                            {
                                                "name": "Pipeline Status InProgress - Running",
                                                "description": "Updates the current execution table with a pipeline status of running if the function outcome is in progress.",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
													"timeout": "0.00:10:00",
													"retry": 0,
													"retryIntervalInSeconds": 0,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[procfwk].[SetLogPipelineRunning]",
                                                    "storedProcedureParameters": {
                                                        "ExecutionId": {
                                                            "value": {
                                                                "value": "@item().LocalExecutionId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Guid"
                                                        },
                                                        "BatchId": {
                                                            "value": {
                                                                "value": "@item().BatchId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "StageId": {
                                                            "value": {
                                                                "value": "@item().StageId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "PipelineId": {
                                                            "value": {
                                                                "value": "@item().PipelineId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "SupportDatabase",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "value": "Cancelled",
                                        "activities": [
                                            {
                                                "name": "Pipeline Status Cancelled",
                                                "description": "Updates the current execution table with a pipeline status of cancelled if the function outcome is cancelled.",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
													"timeout": "0.00:10:00",
													"retry": 0,
													"retryIntervalInSeconds": 0,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[procfwk].[SetLogPipelineCancelled]",
                                                    "storedProcedureParameters": {
                                                        "ExecutionId": {
                                                            "value": {
                                                                "value": "@item().LocalExecutionId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Guid"
                                                        },
                                                        "BatchId": {
                                                            "value": {
                                                                "value": "@item().BatchId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "StageId": {
                                                            "value": {
                                                                "value": "@item().StageId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "PipelineId": {
                                                            "value": {
                                                                "value": "@item().PipelineId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "CleanUpRun": {
                                                            "value": {
                                                                "value": "@bool(1)",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Boolean"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "SupportDatabase",
                                                    "type": "LinkedServiceReference"
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "defaultActivities": [
                                    {
                                        "name": "Pipeline Status Unknown",
                                        "description": "Updates the current execution table with a pipeline status of unknown if the function returns an unexpected outcome.",
                                        "type": "SqlServerStoredProcedure",
                                        "dependsOn": [],
                                        "policy": {
											"timeout": "0.00:10:00",
											"retry": 0,
											"retryIntervalInSeconds": 0,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "storedProcedureName": "[procfwk].[SetLogPipelineUnknown]",
                                            "storedProcedureParameters": {
                                                "ExecutionId": {
                                                    "value": {
                                                        "value": "@item().LocalExecutionId",
                                                        "type": "Expression"
                                                    },
                                                    "type": "Guid"
                                                },
                                                "BatchId": {
                                                    "value": {
                                                        "value": "@item().BatchId",
                                                        "type": "Expression"
                                                    },
                                                    "type": "Int32"
                                                },
                                                "StageId": {
                                                    "value": {
                                                        "value": "@item().StageId",
                                                        "type": "Expression"
                                                    },
                                                    "type": "Int32"
                                                },
                                                "PipelineId": {
                                                    "value": {
                                                        "value": "@item().PipelineId",
                                                        "type": "Expression"
                                                    },
                                                    "type": "Int32"
                                                },
                                                "CleanUpRun": {
                                                    "value": {
                                                        "value": "@bool(1)",
                                                        "type": "Expression"
                                                    },
                                                    "type": "Boolean"
                                                }
                                            }
                                        },
                                        "linkedServiceName": {
                                            "referenceName": "SupportDatabase",
                                            "type": "LinkedServiceReference"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Set Last Check DateTime",
                            "description": "Update the current execution table with a date time from when the function last checked the pipeline status.",
                            "type": "SqlServerStoredProcedure",
                            "dependsOn": [
                                {
                                    "activity": "Get Pipeline Status",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
								"timeout": "0.00:10:00",
								"retry": 0,
								"retryIntervalInSeconds": 0,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "storedProcedureName": "[procfwk].[SetLogPipelineLastStatusCheck]",
                                "storedProcedureParameters": {
                                    "ExecutionId": {
                                        "value": {
                                            "value": "@item().LocalExecutionId",
                                            "type": "Expression"
                                        },
                                        "type": "Guid"
                                    },
                                    "PipelineId": {
                                        "value": {
                                            "value": "@item().PipelineId",
                                            "type": "Expression"
                                        },
                                        "type": "Int32"
                                    },
                                    "StageId": {
                                        "value": {
                                            "value": "@item().StageId",
                                            "type": "Expression"
                                        },
                                        "type": "Int32"
                                    }
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "SupportDatabase",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ]
                }
            },
            {
                "name": "Execute Precursor",
				"description": "Uses the database property value ExecutionPrecursorProc to run any custom logic against the metadata database before the execution run starts.",
				"type": "SqlServerStoredProcedure",
                "dependsOn": [
                    {
                        "activity": "Set Batch Id",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 0,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "storedProcedureName": "[procfwk].[ExecutePrecursorProcedure]"
                },
                "linkedServiceName": {
                    "referenceName": "SupportDatabase",
                    "type": "LinkedServiceReference"
                }
            },
            {
                "name": "Set Execution Id",
                "description": "Set the local execution Id to a pipeline variable for each in several downstream activities.",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Execution Wrapper",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "ExecutionId",
                    "value": {
                        "value": "@activity('Execution Wrapper').output.firstRow.ExecutionId",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Set Batch Id",
                "description": "Set the local execution Id to a pipeline variable for each in several downstream activities.",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Get Batch Id",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "BatchId",
                    "value": {
                        "value": "@string(activity('Get Batch Id').output.firstRow.BatchId)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Get Batch Id",
                "description": "Validates the batch name and returns the batch Id. The batch name is used as an input parameter rather than the batch Id as it allows showing and filtering running pipelines by batch in a more readable way.",
                "type": "Lookup",
                "dependsOn": [],
                "policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 0,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "AzureSqlSource",
                        "sqlReaderStoredProcedureName": "[procfwk].[GetBatchId]",
                        "storedProcedureParameters": {
                            "BatchName": {
                                "type": "String",
                                "value": {
                                    "value": "@pipeline().parameters.BatchName",
                                    "type": "Expression"
                                }
                            }
                        },
                        "queryTimeout": "02:00:00",
                        "partitionOption": "None"
                    },
                    "dataset": {
                        "referenceName": "GetSetMetadata",
                        "type": "DatasetReference"
                    }
                }
            }
        ],
        "parameters": {
            "BatchName": {
                "type": "string",
                "defaultValue": "Weekly"
            }
        },
        "variables": {
            "ExecutionId": {
                "type": "String"
            },
            "BatchId": {
                "type": "String"
            }
        },
        "folder": {
            "name": "_ProcFwk"
        },
        "annotations": [
            "ADF.procfwk",
            "Parent"
        ]
    }
}